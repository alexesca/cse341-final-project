{
  "swagger": "2.0",
  "info": {
    "title": "My Developer Productivity API",
    "description": "This is the best productivity app.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "oauth": {
      "type": "oauth2",
      "authorizationUrl": "http://localhost:3000/login"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Index"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Find all user.",
        "description": "This endpoint returns a list with all the user in the database.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create user and return ID. All fields are required.",
        "description": "This endpoint   a user and returns the newly   user ID.",
        "parameters": [
          {
            "name": "Users",
            "in": "body",
            "description": "Model of the new user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User successfully  .",
            "schema": {
              "type": "string",
              "example": "Newly created User ID",
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/users/{_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Find user by ID.",
        "description": "This endpoint returns a user found with the provided ID",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the desired user.",
            "schema": {
              "type": "string",
              "example": "636c889a2a02ef8e6e9f50e6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully obtained.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user.",
        "description": "This endpoint   a user. All fields are required for a successful update.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Users",
            "in": "body",
            "description": "Model of the new user.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete user.",
        "description": "This endpoint   a user if a valid ID is passed.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/tasks/": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Find all tasks.",
        "description": "This endpoint returns a list with all the tasks in the database.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Task successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Tasks"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tasks"
        ],
        "summary": "Create task and return ID. All fields are required.",
        "description": "This endpoint   a task and returns the newly   task ID.",
        "parameters": [
          {
            "name": "Tasks",
            "in": "body",
            "description": "Model of the new task.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task successfully  .",
            "schema": {
              "type": "string",
              "example": "Newly created task ID",
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/tasks/{_id}": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Find task by ID.",
        "description": "This endpoint returns a task found with the provided ID",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the desired task.",
            "schema": {
              "type": "string",
              "example": "636c889a2a02ef8e6e9f50e6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Update task.",
        "description": "This endpoint   a task. All fields are required for a successful update.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Tasks",
            "in": "body",
            "description": "Model of the new task.",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "Tasks"
        ],
        "summary": "Delete task.",
        "description": "This endpoint   a task if a valid ID is passed.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/breaks/": {
      "get": {
        "tags": [
          "Breaks"
        ],
        "summary": "Find all breaks.",
        "description": "This endpoint returns a list with all the breaks in the database.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Breaks successfully obtained.ser successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Breaks"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Breaks"
        ],
        "summary": "Create break and return ID. All fields are required.",
        "description": "This endpoint   a break and returns the newly   break ID.",
        "parameters": [
          {
            "name": "Breaks",
            "in": "body",
            "description": "Model of the new break.",
            "schema": {
              "$ref": "#/definitions/Break"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Break successfully  .",
            "schema": {
              "type": "string",
              "example": "Newly created break ID",
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/breaks/{_id}": {
      "get": {
        "tags": [
          "Breaks"
        ],
        "summary": "Find break by ID.",
        "description": "This endpoint returns a break found with the provided ID",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the desired break.",
            "schema": {
              "type": "string",
              "example": "636c889a2a02ef8e6e9f50e6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Break successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Break"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Breaks"
        ],
        "summary": "Update break.",
        "description": "This endpoint   a break. All fields are required for a successful update.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Breaks",
            "in": "body",
            "description": "Model of the new break.",
            "schema": {
              "$ref": "#/definitions/Break"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "Breaks"
        ],
        "summary": "Delete break.",
        "description": "This endpoint   a break if a valid ID is passed.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/sessions/": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Find all sessions.",
        "description": "This endpoint returns a list with all the sessions in the database.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Sessions successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Sessions"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Create session and return ID. All fields are required.",
        "description": "This endpoint   a session and returns the newly   session ID.",
        "parameters": [
          {
            "name": "Sessions",
            "in": "body",
            "description": "Model of the new session.",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Session successfully  .",
            "schema": {
              "type": "string",
              "example": "Newly created session ID",
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/sessions/{_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Find session by ID.",
        "description": "This endpoint returns a session found with the provided ID",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id of the desired session.",
            "schema": {
              "type": "string",
              "example": "636c889a2a02ef8e6e9f50e6"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session successfully obtained.",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "Update session.",
        "description": "This endpoint   a session. All fields are required for a successful update.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Sessions",
            "in": "body",
            "description": "Model of the new session.",
            "schema": {
              "$ref": "#/definitions/Session"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "Sessions"
        ],
        "summary": "Delete session.",
        "description": "This endpoint   a session if a valid ID is passed.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "Users": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "m@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "Miguel"
          }
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "m@gmail.com"
        },
        "name": {
          "type": "string",
          "example": "Miguel"
        }
      }
    },
    "Tasks": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6375c691fdc424f3222d320f"
          },
          "_userId": {
            "type": "string",
            "example": "6375c691fdc424f3222d320g"
          },
          "name": {
            "type": "string",
            "example": "Style application menu"
          },
          "description": {
            "type": "string",
            "example": "Add styles to the application menu to match overall app theme."
          },
          "createdAt": {
            "type": "string",
            "example": "2022-09-16T06:00:00.000+0000"
          },
          "dueDate": {
            "type": "string",
            "example": "2022-10-16T06:00:00.000+0000"
          }
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6375c691fdc424f3222d320f"
        },
        "_userId": {
          "type": "string",
          "example": "6375c691fdc424f3222d320g"
        },
        "name": {
          "type": "string",
          "example": "Style application menu"
        },
        "description": {
          "type": "string",
          "example": "Add styles to the application menu to match overall app theme."
        },
        "createdAt": {
          "type": "string",
          "example": "2022-09-16T06:00:00.000+0000"
        },
        "dueDate": {
          "type": "string",
          "example": "2022-10-16T06:00:00.000+0000"
        }
      }
    },
    "Breaks": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6375c691fdc424f3222d320f"
          },
          "_userId": {
            "type": "string",
            "example": "6375c691fdc424f3222d320g"
          },
          "name": {
            "type": "string",
            "example": "Go for a 5 min walk"
          },
          "description": {
            "type": "string",
            "example": "Go for a 5 min walk to let you back rest."
          },
          "createdAt": {
            "type": "string",
            "example": "2022-09-16T06:00:00.000+0000"
          }
        }
      }
    },
    "Break": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "6375c691fdc424f3222d320f"
        },
        "_userId": {
          "type": "string",
          "example": "6375c691fdc424f3222d320g"
        },
        "name": {
          "type": "string",
          "example": "Go for a 5 min walk"
        },
        "description": {
          "type": "string",
          "example": "Go for a 5 min walk to let you back rest."
        },
        "createdAt": {
          "type": "string",
          "example": "2022-09-16T06:00:00.000+0000"
        }
      }
    },
    "Sessions": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "_userId": {
            "type": "string",
            "example": "6375c50e3b3e912a359a2e35"
          },
          "breakIds": {
            "type": "array",
            "example": [
              "6375c50e3b3e912a359a2e35"
            ],
            "items": {
              "type": "string"
            }
          },
          "taskIds": {
            "type": "array",
            "example": [
              "6375c50e3b3e912a359a2e35"
            ],
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "example": "Monday morning session"
          },
          "description": {
            "type": "string",
            "example": "Starting your day session"
          },
          "startDate": {
            "type": "string",
            "example": "2022-09-16T06:00:00.000+0000"
          },
          "endDate": {
            "type": "string",
            "example": "2022-09-16T07:00:00.000+0000"
          },
          "status": {
            "type": "string",
            "example": "Completed"
          }
        }
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "_userId": {
          "type": "string",
          "example": "6375c50e3b3e912a359a2e35"
        },
        "breakIds": {
          "type": "array",
          "example": [
            "6375c50e3b3e912a359a2e35"
          ],
          "items": {
            "type": "string"
          }
        },
        "taskIds": {
          "type": "array",
          "example": [
            "6375c50e3b3e912a359a2e35"
          ],
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "example": "Monday morning session"
        },
        "description": {
          "type": "string",
          "example": "Starting your day session"
        },
        "startDate": {
          "type": "string",
          "example": "2022-09-16T06:00:00.000+0000"
        },
        "endDate": {
          "type": "string",
          "example": "2022-09-16T07:00:00.000+0000"
        },
        "status": {
          "type": "string",
          "example": "Completed"
        }
      }
    }
  },
  "swaggerUIPath": "/api-docs"
}